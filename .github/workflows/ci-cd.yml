name: CI/CD

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—Ä—É—á–Ω—É—é
    inputs:
      publish_marketplace:
        description: 'Publish to VS Code Marketplace'
        required: false
        default: true
        type: boolean
      publish_ovsx:
        description: 'Publish to Open VSX Registry'
        required: false
        default: true
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Type check
      run: npm run check-types
    
    - name: Build
      run: npm run compile
    
    - name: Run tests
      run: |
        xvfb-run -a npm test
      if: runner.os == 'Linux'

  build:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Package extension
      run: |
        npm install -g @vscode/vsce
        vsce package
    
    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: extension-vsix
        path: '*.vsix'

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build and package extension
      run: |
        npm run package
        npx @vscode/vsce package
    
    - name: Check if VSCE_TOKEN is set
      run: |
        if [ -z "$VSCE_TOKEN" ]; then
          echo "‚ö†Ô∏è VSCE_TOKEN is not set - skipping VS Code Marketplace publication"
        else
          echo "‚úÖ VSCE_TOKEN is configured"
        fi
      env:
        VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
    
    - name: Check if OVSX_TOKEN is set
      run: |
        if [ -z "$OVSX_TOKEN" ]; then
          echo "‚ö†Ô∏è OVSX_TOKEN is not set - skipping Open VSX Registry publication"
        else
          echo "‚úÖ OVSX_TOKEN is configured"
        fi
      env:
        OVSX_TOKEN: ${{ secrets.OVSX_TOKEN }}
    
    - name: Publish to VS Code Marketplace
      if: ${{ secrets.VSCE_TOKEN != '' }}
      run: |
        echo "üöÄ Publishing to VS Code Marketplace..."
        npx @vscode/vsce publish --pat $VSCE_TOKEN
        echo "‚úÖ Successfully published to VS Code Marketplace"
      env:
        VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
    
    - name: Publish to Open VSX Registry
      if: ${{ secrets.OVSX_TOKEN != '' }}
      run: |
        echo "üöÄ Publishing to Open VSX Registry..."
        npx ovsx publish --pat $OVSX_TOKEN
        echo "‚úÖ Successfully published to Open VSX Registry"
      env:
        OVSX_TOKEN: ${{ secrets.OVSX_TOKEN }}
    
    - name: Download VSIX artifact
      uses: actions/download-artifact@v4
      with:
        name: extension-vsix
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        files: '*.vsix'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
