name: CI/CD

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Type check
      run: npm run check-types
    
    - name: Build
      run: npm run compile
    
    - name: Run tests
      run: |
        xvfb-run -a npm test
      if: runner.os == 'Linux'

  build:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Package extension
      run: |
        npm install -g vsce
        vsce package
    
    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: extension-vsix
        path: '*.vsix'

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Publish to VS Code Marketplace
      run: |
        npm install -g vsce
        vsce publish -p ${{ secrets.VSCE_TOKEN }}
      env:
        VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
    
    - name: Publish to Open VSX Registry
      run: |
        npm install -g ovsx
        ovsx publish -p ${{ secrets.OVSX_TOKEN }}
      env:
        OVSX_TOKEN: ${{ secrets.OVSX_TOKEN }}
      continue-on-error: true
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    
    - name: Download VSIX artifact
      uses: actions/download-artifact@v4
      with:
        name: extension-vsix
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: copilot-chat-history-*.vsix
        asset_name: copilot-chat-history.vsix
        asset_content_type: application/octet-stream
