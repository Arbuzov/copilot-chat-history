const fs = require('fs');
const path = require('path');
const sharp = require('sharp');

// –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º SVG –≤ PNG –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤
const createIconPng = async () => {
  try {
    const svgPath = path.join(__dirname, '..', 'resources', 'icon.svg');
    const pngPath = path.join(__dirname, '..', 'resources', 'icon.png');
    
    console.log('üìê Converting SVG to PNG (128x128)...');
    
    await sharp(svgPath)
      .resize(128, 128)
      .png({
        compressionLevel: 0, // No compression for maximum file size
        quality: 100,        // Maximum quality
        palette: false,      // Full color, not indexed
        progressive: false,  // Standard PNG
        force: true         // Force PNG output
      })
      .toFile(pngPath);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    const stats = fs.statSync(pngPath);
    console.log(`‚úÖ Icon created: ${pngPath}`);
    console.log(`üìä File size: ${(stats.size / 1024).toFixed(2)} KB`);
    console.log(`üìê Dimensions: 128x128 pixels`);
    
    // VS Code —Ç—Ä–µ–±—É–µ—Ç –º–∏–Ω–∏–º—É–º 1KB –¥–ª—è –∏–∫–æ–Ω–∫–∏
    if (stats.size < 1024) {
      console.warn('‚ö†Ô∏è  Warning: Icon file size is less than 1KB, marketplace might not display it properly');
    } else {
      console.log('‚úÖ Icon size is suitable for VS Code Marketplace');
    }
    
  } catch (error) {
    console.error('‚ùå Error creating icon:', error.message);
    process.exit(1);
  }
};

if (require.main === module) {
  createIconPng();
}

module.exports = { createIconPng };
